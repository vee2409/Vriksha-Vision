{"version":3,"sources":["App.js","index.js"],"names":["mapboxgl","workerClass","require","default","App","useState","pins","setPins","currentPlaceId","setCurrentPlaceId","newPlace","setNewPlace","title","setTitle","desc","setDesc","treecount","setTreecount","latitude","longitude","zoom","viewport","setViewport","handleSubmit","e","a","preventDefault","newPin","lat","long","axios","post","res","data","console","log","useEffect","get","allPins","getPins","style","height","width","mapboxApiAccessToken","transitionDuration","mapStyle","onViewportChange","onDblClick","lngLat","map","p","offsetLeft","offsetTop","Room","fontSize","color","cursor","onClick","id","_id","closeButton","closeOnClick","onClose","anchor","className","href","target","format","createdAt","onSubmit","placeholder","autoFocus","onChange","value","type","window","location","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAaIA,IAASC,YAAcC,EAAQ,KAAqDC,QAyLzEC,MAtLf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAE+BF,mBAAS,MAFxC,mBAENG,EAFM,KAEUC,EAFV,OAGmBJ,mBAAS,MAH5B,mBAGNK,EAHM,KAGIC,EAHJ,OAIaN,mBAAS,MAJtB,mBAINO,EAJM,KAICC,EAJD,OAKWR,mBAAS,MALpB,mBAKNS,EALM,KAKAC,EALA,OAMqBV,mBAAS,GAN9B,mBAMNW,EANM,KAMKC,EANL,OAOmBZ,mBAAS,CACvCa,SAAU,WACVC,UAAW,WACXC,KAAM,KAVK,mBAONC,EAPM,KAOIC,EAPJ,KA2BPC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBD,EAAEE,iBACIC,EAAS,CACbf,QACAE,OACAE,YACAY,IAAKlB,EAASkB,IACdC,KAAMnB,EAASmB,MAPE,kBAUCC,IAAMC,KAAK,iDAAkDJ,GAV9D,OAUXK,EAVW,OAWjBzB,EAAQ,GAAD,mBAAKD,GAAL,CAAW0B,EAAIC,QACtBtB,EAAY,MAZK,kDAcjBuB,QAAQC,IAAR,MAdiB,0DAAH,sDAiClB,OAfAC,qBAAU,YACK,uCAAG,4BAAAX,EAAA,sEAEZS,QAAQC,IAAI,SAFA,SAGUL,IAAMO,IAAI,kDAHpB,OAGNC,EAHM,OAIZJ,QAAQC,IAAIG,GACZ/B,EAAQ+B,EAAQL,MALJ,gDAOZC,QAAQC,IAAR,MAPY,yDAAH,qDAUbI,KACC,IAID,qBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAAtC,SACE,eAAC,IAAD,2BACMrB,GADN,IAEEsB,qBAAqB,yFACrBD,MAAM,OACND,OAAO,OACPG,mBAAmB,MACnBC,SAAS,kDACTC,iBAAkB,SAACzB,GAAD,OAAcC,EAAYD,IAC5C0B,WAnDiB,SAACvB,GAAO,IAAD,cACEA,EAAEwB,OADJ,GACrB7B,EADqB,KACVD,EADU,KAE5BP,EAAY,CACViB,IAAKV,EACLW,KAAMV,KAuCN,UAUGb,EAAK2C,KAAI,SAACC,GAAD,OACR,qCACE,cAAC,IAAD,CACEhC,SAAUgC,EAAEtB,IACZT,UAAW+B,EAAErB,KACbsB,YAAa,IAAM9B,EAASD,KAC5BgC,WAAY,EAAI/B,EAASD,KAJ3B,SAME,cAACiC,EAAA,EAAD,CACEb,MAAO,CACLc,SAAU,EAAIjC,EAASD,KACvBmC,MAAM,SACNC,OAAQ,WAEVC,QAAS,kBAxEIC,EAwEoBR,EAAES,IAxElB/B,EAwEuBsB,EAAEtB,IAxEpBC,EAwEyBqB,EAAErB,KAvE7DpB,EAAkBiD,QAClBpC,EAAY,2BAAKD,GAAN,IAAgBH,SAAUU,EAAKT,UAAWU,KAF7B,IAAC6B,EAAI9B,EAAKC,OA2EzBqB,EAAES,MAAQnD,GACT,cAAC,IAAD,CAEEU,SAAUgC,EAAEtB,IACZT,UAAW+B,EAAErB,KACb+B,aAAa,EACbC,cAAc,EACdC,QAAS,kBAAMrD,EAAkB,OACjCsD,OAAO,OAPT,SAUE,sBAAKC,UAAU,OAAf,UACE,0CACA,oBAAIA,UAAU,QAAd,SAAuBd,EAAEtC,QACzB,2CACA,mBAAGoD,UAAU,OAAb,SAAqBd,EAAEpC,OACvB,8CACA,qBAAKkD,UAAU,QAAf,SACGd,EAAElC,YAEL,gCAAO,mBAAGgD,UAAU,OAAOC,KAAK,oDAAoDC,OAAO,SAApF,2BACP,uBAAMF,UAAU,WAAhB,wBACa,iDAEb,sBAAMA,UAAU,OAAhB,SAAwBG,YAAOjB,EAAEkB,iBAtB9BlB,EAAES,WA4BdjD,GACC,qCACE,cAAC,IAAD,CACEQ,SAAUR,EAASkB,IACnBT,UAAWT,EAASmB,KACpBsB,YAAa,IAAM9B,EAASD,KAC5BgC,WAAY,EAAI/B,EAASD,KAJ3B,SAME,cAACiC,EAAA,EAAD,CACEb,MAAO,CACLc,SAAU,EAAIjC,EAASD,KACvBmC,MAAO,SACPC,OAAQ,eAId,cAAC,IAAD,CACEtC,SAAUR,EAASkB,IACnBT,UAAWT,EAASmB,KACpB+B,aAAa,EACbC,cAAc,EACdC,QAAS,kBAAMnD,EAAY,OAC3BoD,OAAO,OANT,SAQE,8BACE,uBAAMM,SAAU9C,EAAhB,UACE,0CACA,uBACE+C,YAAY,gBACZC,WAAS,EACTC,SAAU,SAAChD,GAAD,OAAOX,EAASW,EAAE0C,OAAOO,UAErC,gDACA,0BACEH,YAAY,qCACZE,SAAU,SAAChD,GAAD,OAAOT,EAAQS,EAAE0C,OAAOO,UAEpC,+CACA,uBACEC,KAAO,SACPJ,YAAY,mBACZC,WAAS,EACTC,SAAU,SAAChD,GAAD,OAAOP,EAAaO,EAAE0C,OAAOO,UAEzC,wBAAQC,KAAK,SAASV,UAAU,eAAhC,+BASR,wBAAQA,UAAU,gBAAgBP,QAAS,WAAMkB,OAAOC,SAASC,QAAQ,uCAAzE,4BCxLVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c82186dc.chunk.js","sourcesContent":["import \"./app.css\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { useEffect, useState } from \"react\";\nimport { Room, Star, StarBorder } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\n\nimport mapboxgl from 'mapbox-gl';\n\n    // The following is required to stop \"npm build\" from transpiling mapbox code.\n    // notice the exclamation point in the import.\n    // @ts-ignore\n    // eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\n    mapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\n\nfunction App() {\n  const [pins, setPins] = useState([]);\n  const [currentPlaceId, setCurrentPlaceId] = useState(null);\n  const [newPlace, setNewPlace] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [desc, setDesc] = useState(null);\n  const [treecount, setTreecount] = useState(0);\n  const [viewport, setViewport] = useState({\n    latitude: 28.5988067,\n    longitude: 77.0339177,\n    zoom: 16,\n  });\n\n  const currentUsername = \"aa\";\n  const handleMarkerClick = (id, lat, long) => {\n    setCurrentPlaceId(id);\n    setViewport({ ...viewport, latitude: lat, longitude: long });\n  };\n\n  const handleAddClick = (e) => {\n    const [longitude, latitude] = e.lngLat;\n    setNewPlace({\n      lat: latitude,\n      long: longitude,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newPin = {\n      title,\n      desc,\n      treecount,\n      lat: newPlace.lat,\n      long: newPlace.long,\n    };\n    try {\n      const res = await axios.post(\"https://vrikshavisionmap.onrender.com/api/pins\", newPin);\n      setPins([...pins, res.data]);\n      setNewPlace(null);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const getPins = async () => {\n      try {\n        console.log('hello');\n        const allPins = await axios.get(\"https://vrikshavisionmap.onrender.com/api/pins\");\n        console.log(allPins);\n        setPins(allPins.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getPins();\n  }, []);\n\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiYW5uMjkiLCJhIjoiY2xid2JpbWY1MDRuZjNybzVsYjdpamZyMyJ9.kinG4Suc9BSMaefvLSEGMA\"\n        width=\"100%\"\n        height=\"100%\"\n        transitionDuration=\"200\"\n        mapStyle=\"mapbox://styles/safak/cknndpyfq268f17p53nmpwira\"\n        onViewportChange={(viewport) => setViewport(viewport)}\n        onDblClick={currentUsername && handleAddClick}\n      >\n        {pins.map((p) => (\n          <>\n            <Marker\n              latitude={p.lat}\n              longitude={p.long}\n              offsetLeft={-3.5 * viewport.zoom}\n              offsetTop={-7 * viewport.zoom}\n            >\n              <Room\n                style={{\n                  fontSize: 7 * viewport.zoom,\n                  color:\"tomato\" ,\n                  cursor: \"pointer\",\n                }}\n                onClick={() => handleMarkerClick(p._id, p.lat, p.long)}\n              />\n            </Marker>\n            {p._id === currentPlaceId && (\n              <Popup\n                key={p._id}\n                latitude={p.lat}\n                longitude={p.long}\n                closeButton={true}\n                closeOnClick={false}\n                onClose={() => setCurrentPlaceId(null)}\n                anchor=\"left\"\n              >\n                \n                <div className=\"card\">\n                  <label>Place</label>\n                  <h4 className=\"place\">{p.title}</h4>\n                  <label>Review</label>\n                  <p className=\"desc\">{p.desc}</p>\n                  <label>Treecount</label>\n                  <div className=\"place\">\n                    {p.treecount}\n                  </div>\n                  <label><a className=\"link\" href=\"https://vriksha-vision-map-dashboard.netlify.app/\" target=\"/blank\">Information</a></label>\n                  <span className=\"username\">\n                    Created by <b>Vrikshavision</b>\n                  </span>\n                  <span className=\"date\">{format(p.createdAt)}</span>\n                </div>\n              </Popup>\n            )}\n          </>\n        ))}\n        {newPlace && (\n          <>\n            <Marker\n              latitude={newPlace.lat}\n              longitude={newPlace.long}\n              offsetLeft={-3.5 * viewport.zoom}\n              offsetTop={-7 * viewport.zoom}\n            >\n              <Room\n                style={{\n                  fontSize: 7 * viewport.zoom,\n                  color: \"tomato\",\n                  cursor: \"pointer\",\n                }}\n              />\n            </Marker>\n            <Popup\n              latitude={newPlace.lat}\n              longitude={newPlace.long}\n              closeButton={true}\n              closeOnClick={false}\n              onClose={() => setNewPlace(null)}\n              anchor=\"left\"\n            >\n              <div>\n                <form onSubmit={handleSubmit}>\n                  <label>Title</label>\n                  <input\n                    placeholder=\"Enter a title\"\n                    autoFocus\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                  <label>Description</label>\n                  <textarea\n                    placeholder=\"Say us something about this place.\"\n                    onChange={(e) => setDesc(e.target.value)}\n                  />\n                  <label>Tree Count</label>\n                  <input\n                    type = 'number'\n                    placeholder=\"Enter Tree Count\"\n                    autoFocus\n                    onChange={(e) => setTreecount(e.target.value)}\n                  />\n                  <button type=\"submit\" className=\"submitButton\">\n                    Add Pin\n                  </button>\n                </form>\n              </div>\n            </Popup>\n          </>\n        )}\n         {currentUsername &&(\n          <button className=\"button logout\" onClick={()=>{{window.location.replace(\"https://vriksha-vision.netlify.app\")}}}>\n            Log out\n          </button>\n        )}\n      \n      </ReactMapGL>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}